How to install and Configure piecemaker on Mac OSX

  Installation Overview

You have to decide whether you are going to have an online version on heroku or not.

You have to decide if you are going to use the server computer to record quicktime videos or not.

You have to decide if you'll store videos online on amazon's s3 service.

You have to decide if the server computer is going to serve the videos to multiple clients on the local network. If so you'll probably want to install apache/passenger. Otherwise script/server will work fine.

If you use apache, do you also serve other sites from the same server?
	If you do you will have to make a virtual host for the app.
      	If not you can serve piecemaker from the apache document root. This is how the 	TFC system is currently working.

Previously, piecemaker  looked for it’s videos in /piecemaker_videos on the root you hard drive.
Now the videos are in the application /public/video/full . This makes more sense and simplifies installation.

In the instructions below, the '>' means you should type the command in your terminal.

  Absolute Bare Minimum Requirements
      - Ruby
      - Ruby Gems
      - Sqlite
      - Git
      - Tools:
        - Mesasql to manage sqlite files
        - seqel pro for mysql
        - a text editor that can open invisible files
        also useful:
          textmate with bundles
          launch bar
          gitx
          team viewer


    - To be Able to Record Video Directly on Server
      - Quicktime Player

    - To be Able to Stream Video.
      - Apache Webserver
      - Apache streaming Module

    - To be Able to Compress Video for Upload
      - HandbrakeCLI (simpler) or
      - ffmpeg + qt_fast (more complex)

    - To be able to make image thumbnails
      - imagemagick

    Installation steps

    - Enable sudo for your machine
    - Check ruby and sqlite versions
      - In a terminal run
        > ruby -v
        The ruby version should be 1.8.7 or higher. MacOS 10.6 should be OK.
        > sqlite3 --version
        Sqlite should be version >= 1.3.3

        If you have the right ruby and sqlite verisions you can skip down to step: Get git
        Otherwise you have to follow the next steps
    - Install Latest Apple Developer Tools
      this is necessary if you have to compile programs like sqlite, ffmpeg etc. In 10.6 You
      might not need this for a basic install.
    - update your PATH in .profile
      export PATH="/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:$PATH"
      this makes sure you are linked to the right ruby installation

    - Make a directory to work in and cd into it
        > mkdir src
        > cd src

    - Get Ruby >= 1.8.7
        - download latest ruby
          > curl -O ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p174.tar.gz
          > tar xzvf ruby-1.8.7-p174.tar.gz
          > cd ruby-1.8.7-p174
          > ./configure --enable-shared --enable-pthread CFLAGS=-D_XOPEN_SOURCE=1
          > make
          > sudo make install
          > cd ../

        - download rubygems
          > curl -O http://production.cf.rubygems.org/rubygems/rubygems-1.7.2.tgz
          > tar xzvf rubygems-1.7.2.tgz
          > cd rubygems-1.7.2
          > sudo /usr/local/bin/ruby setup.rb
          > cd ..

        - update system gems
          > sudo gem update
          > sudo gem install bundler

    - Get sqlite3 OSX 10.5 or less

        > curl -O download sqlite 3.7.5 http://www.sqlite.org/sqlite-amalgamation-3070500.zip
        > double click to unzip
        > cd sqlite-amalgamation-3070500
        > ./configure
        > make
        > sudo make install



    - Get git
      - for 32 bit
        > curl -O http://code.google.com/p/git-osx-installer/downloads/detail?name=git-1.7.4.1-i386-leopard.dmg&can=3&q=
      - for 64 bit
        > curl -O http://code.google.com/p/git-osx-installer/downloads/detail?name=git-1.7.4.1-x86_64-leopard.dmg&can=3&q=
      - double click package to install

    - Get github account
      - go to github com and sign up
      - set up ssh keys for github(see github site for details)
      - ask david to be included on project so you can pull the repository

    - Get repository

      - if you want to run apache from the default /Library/WebServer/Documents using passenger
        - Remove everything from /Library/WebServer/Documents
        > cd /Library/WebServer/Documents
        > git clone git@github.com:nutbits/piecemaker.git .      (the dot at the end is important)

      - if you will run script/server or as an apache virtual host
        > cd path/where/you/want/to/install/piecemaker
        > git clone git@github.com:nutbits/piecemaker.git

If you use script/server
	Now go to SetupConfiguration Section...
If you use apache/passenger
   - make sure you have the Apple developer tools installed
   - Set up apache / passenger (skip if you will use script/server)

      > sudo gem install passenger
      > sudo  passenger-install-apache2-module
        - the passenger installer will guide you through the installation process
          when it is done it will show you some code that you have to copy and paste
          into your httpd.conf file
        - httpd.conf is located at /etc/apache2/httpd.conf  this is true for 10.6
          and maybe 10.5 I'm not sure about 10.4

        - paste the code into the bottom of the file add this too:

        PassengerPoolIdleTime 0
        RailsEnv development
        SetEnv S3_SECRET_ACCESS_KEY *******  #(if you use s3 uploading)
        SetEnv S3_ACCESS_KEY_ID *********    #(if you use s3 uploading)
        SetEnv S3_BUCKET bucket_name         #(if you use s3 uploading)
        SetEnv ARCH_TYPE 32                  #(or 64 if you have a 64 bit machine)

        - if you want pseudo streaming
          - Download the source code
            > cd path/to/src/folder
            > wget http://h264.code-shop.com/download/apache_mod_h264_streaming-2.2.7.tar.gz
            > tar -zxvf apache_mod_h264_streaming-2.2.7.tar.gz
            > cd ~/mod_h264_streaming-2.2.7

          -32 bit machine
            > ./configure CFLAGS='-arch i386' APXSLDFLAGS='-arch i386' --with-apxs=/usr/sbin/apxs
            > make
            > sudo make install

          -64 bit machine
            > ./configure CFLAGS='-arch x86_64' APXSLDFLAGS='-arch x86_64' --with-apxs=/usr/sbin/apxs
            > make
            > sudo make install

          - Add these lines to your httpd.conf. Look for a long set of lines which have LoadModule and add it after the last of those lines.

            LoadModule h264_streaming_module libexec/apache2/mod_h264_streaming.so
            AddHandler h264-streaming.extensions .mp4


If you serve from /LIbrary/WebServer/Documents you’re finished installing.
	Now go to configuration section.
If you want to serve a virtual host from apache you’re not quite done yet.
  - Lets say you want to call your virtual host piecemakerlocal
  - open the hosts file at /private/etc/hosts
      - add an entry like this and save the file
       127.0.0.1 piecemakerlocal
  - open httpd.conf again add this and save the file

     <VirtualHost 127.0.0.1>
       ServerName piecemakerlocal
       DocumentRoot "/path/to/piecemaker/public"
       RailsEnv development
       <directory "/path/to/piecemaker/public">
     		Options FollowSymLinks
         Order allow,deny
         Allow from all
       </directory>
     </VirtualHost>

	Now go to configuration section.

  SetupConfiguration Overview

    Once you've installed the system stuff you have to configure the app itself.
      - What database will you use. sqlite is easiest
      - If you will use s3 to store videos online
        - you need to get the aws s3 api keys from amazon and add the info as environment variables in you shell.

    Set Quicktime Player save folder to '/path_to_app/public/video/full'


  COnfiguration Steps


	if you use amazon s3 set environment variables in shell
	- add this to your .profile for example
	  export ARCH_TYPE=32 (or 64 if you have a 64 bit machine)
    export S3_ACCESS_KEY_ID=yourkeyid
    export S3_SECRET_ACCESS_KEY=yoursecretaccesskey
    export S3_BUCKET=yourbucketname
  configure database.yml
  	rename config/database-example.yml to database.yml
  	change settings to reflect what you want mysql or sqlite etc.
  cd into app folder
	  > bundle install
	  > rake piecemaker:setup
        this will create the video folders and create an admin user to start with
        username: Administrator
    	  password: Administrator



	restart apache if you use it
	  > sudo apachectl graceful
	or simply
	  > script/server
	if you server from /Library/WebServer/Documents
	  go to http://localhost
	if you have a virtual host
	  go to http://piecemakerlocal
	if you use script/server
	  go to http://localhost:3000
	login with
    username: Administrator
	  password: Administrator


If you want to use s3 to upload stuff you have to create an s3 bucket with the same name as the config variable you set previously.


Heroku instructions

create heroku account & environment variables
    heroku create piecemaker-example
    heroku config:add S3_SECRET_ACCESS_KEY=
    heroku config:add S3_ACCESS_KEY_ID=
    heroku config:add S3_BUCKET=piecemaker-example
    heroku config:add APP_LOCATION=heroku
    heroku config:add BUNDLE_WITHOUT="development:test"
    git push heroku-example master

    heroku rake db:schema:load
    heroku rake db:seed


  S3_BUCKET=piecemaker-desw --app piecemaker-desw
